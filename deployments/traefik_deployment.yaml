# Big shoutout to my homies at DigitalOcean from which I could base the initial docker setup on
# (https://www.digitalocean.com/community/tutorials/how-to-use-ansible-to-install-and-set-up-docker-on-ubuntu-18-04 but we're debian gang instead)

- name: Traefik Deployment
  hosts: docker_swarm_manager
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools' ]

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
        state: present

    - name: Update apt and install docker packages
      apt: update_cache=yes name={{ item }} state=latest
      loop: [ 'docker-ce' ]

    - name: Install required python modules
      pip:
        name:
        - docker
        - jsondiff
        - pyyaml

    - name: Create traefik container stack
      docker_stack:
        name: traefik
        state: present
        compose:
        - version: "3.2"
          services:
            traefik:
              image: traefik
              command:
                - "--api.insecure=true"
                - "--entrypoints.http.address=:80"
                - "--entrypoints.https.address=:443"
                - "--providers.docker"
                - "--providers.docker.swarmmode=true"
                - "--providers.file.directory=/etc/traefik/conf.d/"
                - "--providers.file.watch=true"
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock
                - acme-store:/etc/traefik/acme/
                - traefik-dyn:/etc/traefik/conf.d/
              ports:
                - target: 80
                  published: 80
                - target: 443
                  published: 443
                - target: 8080
                  published: 8080
              deploy:
                labels:
                  - traefik.http.services.traefik-ext-srv.loadbalancer.server.port=8080
                  - traefik.http.routers.traefik-ext.rule=Host(`172.28.5.241`)
                  - traefik.http.routers.traefik-ext.service=api@internal
                mode: global
                placement:
                  constraints:
                    - node.role == manager
                update_config:
                  parallelism: 1
                  delay: 10s
                restart_policy:
                  condition: on-failure
          volumes:
            acme-store:
            traefik-dyn: